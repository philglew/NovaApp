{"ast":null,"code":"/*! @azure/msal-browser v3.28.0 2024-12-12 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\nclass CookieStorage {\n  getItem(key) {\n    const name = \"\".concat(encodeURIComponent(key));\n    const cookieList = document.cookie.split(\";\");\n    for (let i = 0; i < cookieList.length; i++) {\n      const cookie = cookieList[i];\n      const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\n      const value = rest.join(\"=\");\n      if (key === name) {\n        return value;\n      }\n    }\n    return \"\";\n  }\n  setItem(key, value, cookieLifeDays) {\n    let secure = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    let cookieStr = \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value), \";path=/;SameSite=Lax;\");\n    if (cookieLifeDays) {\n      const expireTime = getCookieExpirationTime(cookieLifeDays);\n      cookieStr += \"expires=\".concat(expireTime, \";\");\n    }\n    if (secure) {\n      cookieStr += \"Secure;\";\n    }\n    document.cookie = cookieStr;\n  }\n  removeItem(key) {\n    // Setting expiration to -1 removes it\n    this.setItem(key, \"\", -1);\n  }\n  getKeys() {\n    const cookieList = document.cookie.split(\";\");\n    const keys = [];\n    cookieList.forEach(cookie => {\n      const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\n      keys.push(cookieParts[0]);\n    });\n    return keys;\n  }\n  containsKey(key) {\n    return this.getKeys().includes(key);\n  }\n}\n/**\r\n * Get cookie expiration time\r\n * @param cookieLifeDays\r\n */\nfunction getCookieExpirationTime(cookieLifeDays) {\n  const today = new Date();\n  const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\n  return expr.toUTCString();\n}\nexport { CookieStorage, getCookieExpirationTime };","map":{"version":3,"names":["COOKIE_LIFE_MULTIPLIER","CookieStorage","getItem","key","name","concat","encodeURIComponent","cookieList","document","cookie","split","i","length","rest","decodeURIComponent","trim","value","join","setItem","cookieLifeDays","secure","arguments","undefined","cookieStr","expireTime","getCookieExpirationTime","removeItem","getKeys","keys","forEach","cookieParts","push","containsKey","includes","today","Date","expr","getTime","toUTCString"],"sources":["C:\\temp\\NovaApp\\src\\nova.web\\node_modules\\@azure\\msal-browser\\src\\cache\\CookieStorage.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage.js\";\n\n// Cookie life calculation (hours * minutes * seconds * ms)\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\nexport class CookieStorage implements IWindowStorage<string> {\n    getItem(key: string): string | null {\n        const name = `${encodeURIComponent(key)}`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i = 0; i < cookieList.length; i++) {\n            const cookie = cookieList[i];\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\n            const value = rest.join(\"=\");\n\n            if (key === name) {\n                return value;\n            }\n        }\n        return \"\";\n    }\n\n    setItem(\n        key: string,\n        value: string,\n        cookieLifeDays?: number,\n        secure: boolean = true\n    ): void {\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(\n            value\n        )};path=/;SameSite=Lax;`;\n\n        if (cookieLifeDays) {\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (secure) {\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    removeItem(key: string): void {\n        // Setting expiration to -1 removes it\n        this.setItem(key, \"\", -1);\n    }\n\n    getKeys(): string[] {\n        const cookieList = document.cookie.split(\";\");\n        const keys: Array<string> = [];\n        cookieList.forEach((cookie) => {\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\n            keys.push(cookieParts[0]);\n        });\n\n        return keys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.getKeys().includes(key);\n    }\n}\n\n/**\n * Get cookie expiration time\n * @param cookieLifeDays\n */\nexport function getCookieExpirationTime(cookieLifeDays: number): string {\n    const today = new Date();\n    const expr = new Date(\n        today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER\n    );\n    return expr.toUTCString();\n}\n"],"mappings":";;;AAAA;;;AAGG;AAIH;AACA,MAAMA,sBAAsB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;MAErCC,aAAa;EACtBC,OAAOA,CAACC,GAAW;IACf,MAAMC,IAAI,MAAAC,MAAA,CAAMC,kBAAkB,CAACH,GAAG,CAAC,CAAE;IACzC,MAAMI,UAAU,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,MAAMF,MAAM,GAAGF,UAAU,CAACI,CAAC,CAAC;MAC5B,MAAM,CAACR,GAAG,EAAE,GAAGU,IAAI,CAAC,GAAGC,kBAAkB,CAACL,MAAM,CAAC,CAACM,IAAI,EAAE,CAACL,KAAK,CAAC,GAAG,CAAC;MACnE,MAAMM,KAAK,GAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC;MAE5B,IAAId,GAAG,KAAKC,IAAI,EAAE;QACd,OAAOY,KAAK;MACf;IACJ;IACD,OAAO,EAAE;;EAGbE,OAAOA,CACHf,GAAW,EACXa,KAAa,EACbG,cAAuB,EACD;IAAA,IAAtBC,MAAA,GAAAC,SAAA,CAAAT,MAAA,QAAAS,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAkB,IAAI;IAEtB,IAAIE,SAAS,MAAAlB,MAAA,CAAMC,kBAAkB,CAACH,GAAG,CAAC,OAAAE,MAAA,CAAIC,kBAAkB,CAC5DU,KAAK,CACR,0BAAuB;IAExB,IAAIG,cAAc,EAAE;MAChB,MAAMK,UAAU,GAAGC,uBAAuB,CAACN,cAAc,CAAC;MAC1DI,SAAS,eAAAlB,MAAA,CAAemB,UAAU,MAAG;IACxC;IAED,IAAIJ,MAAM,EAAE;MACRG,SAAS,IAAI,SAAS;IACzB;IAEDf,QAAQ,CAACC,MAAM,GAAGc,SAAS;;EAG/BG,UAAUA,CAACvB,GAAW;;IAElB,IAAI,CAACe,OAAO,CAACf,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;EAG7BwB,OAAOA,CAAA;IACH,MAAMpB,UAAU,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IAC7C,MAAMkB,IAAI,GAAkB,EAAE;IAC9BrB,UAAU,CAACsB,OAAO,CAAEpB,MAAM,IAAI;MAC1B,MAAMqB,WAAW,GAAGhB,kBAAkB,CAACL,MAAM,CAAC,CAACM,IAAI,EAAE,CAACL,KAAK,CAAC,GAAG,CAAC;MAChEkB,IAAI,CAACG,IAAI,CAACD,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAOF,IAAI;;EAGfI,WAAWA,CAAC7B,GAAW;IACnB,OAAO,IAAI,CAACwB,OAAO,EAAE,CAACM,QAAQ,CAAC9B,GAAG,CAAC;;AAE1C;AAED;;;AAGG;AACG,SAAUsB,uBAAuBA,CAACN,cAAsB;EAC1D,MAAMe,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,MAAMC,IAAI,GAAG,IAAID,IAAI,CACjBD,KAAK,CAACG,OAAO,EAAE,GAAGlB,cAAc,GAAGnB,sBAAsB,CAC5D;EACD,OAAOoC,IAAI,CAACE,WAAW,EAAE;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}