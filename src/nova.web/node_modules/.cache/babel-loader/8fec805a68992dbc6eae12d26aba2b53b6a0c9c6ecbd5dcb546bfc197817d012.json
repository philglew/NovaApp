{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://localhost:7151/api'; // Make sure this is HTTPS\n\nconst departmentService = {\n  getAllDepartments: async () => {\n    try {\n      console.log('Attempting to fetch from:', `${API_URL}/departments`);\n      const response = await axios.get(`${API_URL}/departments`);\n      console.log('Response received:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching departments:', error.message);\n      throw new Error('Failed to fetch departments');\n    }\n  },\n  getDepartmentById: async id => {\n    const response = await axios.get(`${API_URL}/departments/${id}`);\n    return response.data;\n  }\n};\nexport default departmentService;","map":{"version":3,"names":["axios","API_URL","departmentService","getAllDepartments","console","log","response","get","data","error","message","Error","getDepartmentById","id"],"sources":["C:/temp/NovaApp/src/nova.web/src/services/api/departmentService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Department } from '../../types/department';\r\n\r\nconst API_URL = 'https://localhost:7151/api';  // Make sure this is HTTPS\r\n\r\nconst departmentService = {\r\n  getAllDepartments: async (): Promise<Department[]> => {\r\n    try {\r\n      console.log('Attempting to fetch from:', `${API_URL}/departments`);\r\n      const response = await axios.get(`${API_URL}/departments`);\r\n      console.log('Response received:', response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Error fetching departments:', error.message);\r\n      throw new Error('Failed to fetch departments');\r\n    }\r\n  },\r\n\r\n  getDepartmentById: async (id: string): Promise<Department> => {\r\n    const response = await axios.get(`${API_URL}/departments/${id}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default departmentService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,4BAA4B,CAAC,CAAE;;AAE/C,MAAMC,iBAAiB,GAAG;EACxBC,iBAAiB,EAAE,MAAAA,CAAA,KAAmC;IACpD,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,GAAGJ,OAAO,cAAc,CAAC;MAClE,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,cAAc,CAAC;MAC1DG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAChD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;MACnBL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC3D,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACF,CAAC;EAEDC,iBAAiB,EAAE,MAAOC,EAAU,IAA0B;IAC5D,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,gBAAgBY,EAAE,EAAE,CAAC;IAChE,OAAOP,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeN,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}